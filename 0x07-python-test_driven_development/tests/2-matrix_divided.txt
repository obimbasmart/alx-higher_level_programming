============================================================
Text file for testing the division of a matrix by an integer
============================================================


First, import the function:
        >>> divide_matrix = __import__('2-matrix_divided').matrix_divided

Check valid arguments
	>>> matrix = [[1, 2, 3], [5, 6, 7], [8, 9, 10]]
	>>> divide_matrix(matrix, 2)
	[[0.5, 1.0, 1.5], [2.5, 3.0, 3.5], [4.0, 4.5, 5.0]]
	>>> divide_matrix(matrix, -3)
	[[-0.33, -0.67, -1.0], [-1.67, -2.0, -2.33], [-2.67, -3.0, -3.33]]
	>>> matrix = [[1, 2.4, 3], [3.1, 5.4, 7], [8, 9.0, 10.555]]
	>>> divide_matrix(matrix, 2)
	[[0.5, 1.2, 1.5], [1.55, 2.7, 3.5], [4.0, 4.5, 5.28]]

check for zero division
	>>> divide_matrix(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Check if matrix is a list:
	>>> matrix = "not a list"
	>>> divide_matrix(matrix, 4)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
Check for inconsistent length:
        >>> divide_matrix([[1, 3, 4.0], [1, 5], [0, 6, 4, 5]], 4)
        Traceback (most recent call last):
            ...
        TypeError: Each row of the matrix must have the same size

Check if matrix contains list of lists
        >>> divide_matrix([[1, 3, 4], 8, [0, 6, 4, 5]], 4)
        Traceback (most recent call last):
            ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if matrix contains a list of lists of integers or floats:
        >>> divide_matrix([[1, "number"], [3, 9]], 4)
        Traceback (most recent call last):
            ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

check if divisor is a number
	>>> matrix = [[1, 2], [2, 3]]
	>>> divide_matrix(matrix, "dka")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

check empty matrix:
	>>> matrix = []
	>>> divide_matrix(matrix, 2)
	[]
	>>> matrix = [[], [], []]
	>>> divide_matrix(matrix, 2)
	[[], [], []]


